alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1) %>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=lambda, l1_error_31))+
geom_line(linewidth=1.2)+
geom_point()+
#geom_errorbar(aes(ymin=q.25_l1_error_21, ymax=q.75_l1_error_21))+
scale_x_log10()+
scale_y_log10() +#
# #geom_hline(data = res %>% filter(#power_pa == 1.2,
#   #gamma_epid == 0.1,
#   diffuse==10,
#   propagation == "true_p",
#   beta_epid != 0.5,
#   p_norm == 1,
#   #beta_epid < 0.5,
#   nb_init == 1) %>% group_by(beta_epid, gamma_epid, dc_heterogeneity) %>%
#     summarise(benchmark_l1_error_31 =median(benchmark_l1_error_31)) %>%
#     mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
#   aes(yintercept=benchmark_l1_error_31, colour = "Benchmark"),
#   linewidth=1.) +
facet_wrap(r0~diffuse,
scales = "free_y", ncol = 3)+
xlab("lambda (Regularization Strength)") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
res0  = data %>%
filter( n > 600) %>%
group_by(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation) %>%
summarise_if(is.numeric, median) %>%
ungroup()
colnames(res0)
help(pivot_longer)
res0 %>% select(-starts_with("l2_error"))
colnames(res0[1:10,] %>% select(-starts_with("l2_error")))
colnames(res0[1:10,] select(-starts_with("l2_error"))%>%
colnames(res0[1:10,] %>%select(-starts_with("l2_error"))%>%
select(-starts_with("benchmark_l2_error")))
pivot_longer(res0[1:10,] %>%
select(-starts_with("l2_error"))%>%
select(-starts_with("benchmark_l2_error")),
cols = ends_with("l1_error_1"))
test= pivot_longer(res0[1:10,] %>%
select(-starts_with("l2_error"))%>%
select(-starts_with("benchmark_l2_error")),
cols = ends_with("l1_error_1"))
View(test)
help(ends_with)
res0 = res0 %>%
select(-starts_with("l2_error"))%>%
select(-starts_with("benchmark_l2_error"))
colnames(res0)
test1 = pivot_longer(res0 %>%
select(-starts_with("benchmark_l1_")),
cols = ends_with("l1_error_1"))
View(test1)
colnames(res0)
help(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation)
help("pivot_longer")
res0 %>%
select(-starts_with("benchmark_l1_"))%>%
select(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation, starts_with("l1_"))
test = res0 %>%
select(-starts_with("benchmark_l1_"))%>%
select(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation, starts_with("l1_"))
View(test)
test1 = pivot_longer(res0 %>%
select(-starts_with("benchmark_l1_"))%>%
select(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation, starts_with("l1_")),
cols =  starts_with("l1_"))
View(test1)
sapply(test1$name[1:10],
function(entry){as.numeric(sub("l1_error_([0-9]+).*", "\\1",
entry))})
test1["time"] = sapply(test1$name,
function(entry){as.numeric(sub("l1_error_([0-9]+).*", "\\1",
entry))})
test1 = pivot_longer(res0 %>%
select(-starts_with("l1_error"))%>%
select(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation, starts_with("benchmark_l1_")),
cols =  starts_with("benchmark_l1_"))
test1
test1["time"] = sapply(test1$name,
function(entry){as.numeric(sub("benchmark_l1_error_([0-9]+).*", "\\1",
entry))})
test1 = pivot_longer(res0 %>%
select(-starts_with("benchmark_l1_"))%>%
select(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation, starts_with("l1_")),
cols =  starts_with("l1_"))
test1["time"] = sapply(test1$name,
function(entry){as.numeric(sub("l1_error_([0-9]+).*", "\\1",
entry))})
test_bench = pivot_longer(res0 %>%
select(-starts_with("l1_error"))%>%
select(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation, starts_with("benchmark_l1_")),
cols =  starts_with("benchmark_l1_"))
test_bench["time"] = sapply(test1$name,
function(entry){as.numeric(sub("benchmark_l1_error_([0-9]+).*", "\\1",
entry))})
colnames(test1)
colnames(test1)[ncol(test1)] = "Error"
colnames(test_bench)[ncol(test_bench)] = "Error_bench"
rlang::last_trace()
help(merge)
test1 = merge(test1, test_bench,
)
test1 = pivot_longer(res0 %>%
select(-starts_with("benchmark_l1_"))%>%
select(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation, starts_with("l1_")),
cols =  starts_with("l1_"))
test1["time"] = sapply(test1$name,
function(entry){as.numeric(sub("l1_error_([0-9]+).*", "\\1",
entry))})
colnames(test1)[ncol(test1)] = "Error"
test_bench = pivot_longer(res0 %>%
select(-starts_with("l1_error"))%>%
select(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation, starts_with("benchmark_l1_")),
cols =  starts_with("benchmark_l1_"))
test_bench["time"] = sapply(test1$name,
function(entry){as.numeric(sub("benchmark_l1_error_([0-9]+).*", "\\1",
entry))})
test_bench["time"] = sapply(test_bench$name,
function(entry){as.numeric(sub("benchmark_l1_error_([0-9]+).*", "\\1",
entry))})
colnames(test_bench)
colnames(test_bench)[ncol(test_bench)-1] = "Error_bench"
colnames(test_bench)
test1 = pivot_longer(res0 %>%
select(-starts_with("benchmark_l1_"))%>%
select(lambda, beta_epid, gamma_epid, alpha_fp,
dc_heterogeneity, steps, heterogeneity_rates, nb_init, p_norm, mode,
diffuse, propagation, starts_with("l1_")),
cols =  starts_with("l1_"))
test1["time"] = sapply(test1$name,
function(entry){as.numeric(sub("l1_error_([0-9]+).*", "\\1",
entry))})
colnames(test1)[ncol(test1)-1] = "Error"
colnames(test1)
setdiff(colnames(test1), c("Error"))
test1$name
setdiff(colnames(test1), c("Error", "name"))
test_merged = merge(test1 %>% select(-name), test_bench%>% select(-name),
by = setdiff(colnames(test1), c("Error", "name")))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
facet_wrap(r0~diffuse,
scales = "free_y", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
facet_wrap(r0~diffuse,
scales = "free_y", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.001,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
facet_wrap(r0~diffuse,
scales = "free_y", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
colnames(test_bench)
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.001,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_line(aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free_y", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.001,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_line(aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free_y", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
scale_x_log10() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.001,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_line(aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free_y", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
scale_x_log10() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.001,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_point(aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free_y", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
scale_x_log10() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.001,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1) %>% filter(time == 1)
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_point(aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free_y", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
scale_x_log10() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_point(aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free_y", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
#scale_x_log10() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_point(aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
#scale_x_log10() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_point(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)) %>%
group_by(time, r0, diffuse) %>%
summarise(Error_bench=mean(Error_bench)),
aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
#scale_x_log10() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_point(data=test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)) %>%
group_by(time, r0, diffuse) %>%
summarise(Error_bench=mean(Error_bench)),
aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
#scale_x_log10() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_point(data=test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
lambda  < 0.01,
lambda>0.001,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)) %>%
group_by(time, r0, diffuse) %>%
summarise(Error_bench=mean(Error_bench)),
aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
#scale_x_log10() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)),
aes(x=time, y = Error, color = as.factor(lambda))) +
geom_line() +
geom_point(data=test_merged %>% filter(#power_pa == 1.2,
#gamma_epid == 0.1,
alpha_fp == 0.01,
#diffuse==10,
propagation == "true_p",
p_norm == 1,
lambda  < 0.01,
lambda>0.001,
gamma_epid == 0.01,
beta_epid != 0.5,
nb_init == 1)%>%
mutate( r0 = paste0( "R0 = ", beta_epid/gamma_epid)) %>%
group_by(time, r0, diffuse) %>%
summarise(Error_bench=mean(Error_bench)),
aes(x=time, y=Error_bench, color = "benchmark"))+
facet_wrap(r0~diffuse,
scales = "free", ncol = 3)+
xlab("Time") +
ylab(expression(italic(l[1]) ~ "error")) +
labs(colour="Comparison") +
#scale_x_log10() +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
